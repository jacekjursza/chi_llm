name: Tests

on:
  push:
    branches: [ master, main, develop ]
  pull_request:
    branches: [ master, main ]
  schedule:
    # Run tests daily at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']
        exclude:
          # Exclude some combinations to save CI time
          - os: windows-latest
            python-version: '3.8'
          - os: macos-latest
            python-version: '3.8'

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
    
    - name: Run linting
      run: |
        flake8 chi_llm tests --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 chi_llm tests --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Run tests with coverage
      run: |
        pytest --cov=chi_llm --cov-report=xml --cov-report=term
    
    - name: Upload coverage to Codecov
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.10'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  integration-test:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install package
      run: |
        python -m pip install --upgrade pip
        pip install -e .
    
    - name: Test imports
      run: |
        python -c "from chi_llm import MicroLLM, quick_llm"
        python -c "from chi_llm import CodeAnalyzer"
        python -c "from chi_llm import PromptTemplates"
        python -c "print('All imports successful!')"
    
    - name: Test CLI
      run: |
        chi-llm --help || true
        code-analyzer --help || true

  publish-test-results:
    name: Publish Test Results
    needs: test
    runs-on: ubuntu-latest
    if: always()
    
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v3
      
    - name: Publish Test Results
      uses: EnricoMi/publish-unit-test-result-action@v2
      if: always()
      with:
        files: |
          test-results/**/*.xml
          test-results/**/*.trx
          test-results/**/*.json